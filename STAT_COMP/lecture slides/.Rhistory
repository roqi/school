v <- c()
v[1] <- 6
v[3] <- 5
v
c(c(1,2), C(3,4,5))
c(c(1,2), c(3,4,5))
matrix(nrow=3, ncol=3)
matrix(1:50,nrow=3, ncol=3)
matrix(1:5:7:11,nrow=3, ncol=3)
matrix(1:5:11,nrow=3, ncol=3)
1:5:11
1:5:11:15
matrix(1:9,nrow=3, ncol=3)
matrix(1:9,nrow=3, ncol=3)
matrix(1:9,nrow=3, ncol=3, byrow=T)
matrix(nrow=2, ncol=3)
matrix(nrow=2, ncol=3)[1,1]
```{r}
lol <- matrix(nrow=2, ncol=3)
lol[1,2] <- "helo"
lol
```{r}
lol <- matrix(nrow=2, ncol=3)
lol[1,2] <- 3
lol
rbind(lol, c(4:6))
lol <- matrix(nrow=2, ncol=3)
lol[1,2] <- 3
rbind(lol, c(4:6))
lol <- matrix(nrow=2, ncol=3)
lol[1,2] <- 3
str(rbind(lol, c(4:6)))
lol <- matrix(nrow=2, ncol=3)
lol[1,2] <- 3
rbind(lol, c(4:6))
??"hello"
??"vector"
??"vector" //search
??"invert matrix"
??"hilbert matrix"
?str
?str()
tmp[2:4]
tmp <- c(11, 12, 13, 14)
tmp[2:4]
tmp <- c(11, 12, 13, 14)
tmp[2:4]
tmp[c(1,4)]
tmp <- c(11, 12, 13, 14, 15)
tmp[2:4]
tmp[c(1,4)]
tmp[c(2,5)] <- 3
tmp <- c(11, 12, 13, 14, 15)
tmp[2:4]
tmp[c(1,4)]
tmp[c(2,5)] <- 3
tmp
tmp[-1]
tmp <- c(11, 12, 13, 14, 15)
tmp[2:4]
tmp[c(1,4)]
tmp[c(2,5)] <- 3
tmp
tmp[-1]
tmp <- c(11, 12, 13, 14, 15)
tmp[2:4]
tmp[c(1,4)]
tmp[c(2,5)] <- 3
tmp
tmp[-1]
tmp[-c(1,4)]
tmp <- matrix(1:6, nrow=2, ncol=3)
tmp
tmp[,2:3]
tm[1,:]
tm[1,]
tmp[1,]
tmp <- matrix(1:6, nrow=2, ncol=3)
tmp[,2:3]
tmp[1,]
bird <- read.pnm("bird.pgm")
install.packages("pixmap")
install.packages("ggplot2")
""
library("ggplot2")
library("pixmap")
bird <- read.pnm("bird.pgm")
bird <- read.pnm("bird.pgm")
bird <- read.pnm("bird.jpeg")
bird <- read.jpg("bird.jpeg")
bird <- read.jpeg("bird.jpeg")
bird <- read.png("bird.jpeg")
?read
?read.pnm
bird <- read.png("bird.ppm")
bird <- read.pnm("bird.ppm")
bird <- read.ppm("bird.ppm")
bird <- read.pnm("bird.pgm")
bird
bird <- read.pnm("bird.pgm")
bird
plot(bird)
bird
bird <- read.pnm("bird.pgm")
bird
plot(bird)
bird
plot(bird)
plot(bird)
dim(bird)
dim(bird@grey)
dim(bird@grey)
bird@grey[100:200, 200:300] <- 0
plot(bird)
bird@grey[100:200, 200:300] <- 1
plot(bird)
bird@grey[100:200, 200:300] <- 1
bird@grey[150:250, 250:350] <- 0
plot(bird)
mat <- rbind(c(1,2),c(4,3))
mat
3*mat
mat1 <- rbind(c(1,2),c(4,3))
mat2 <- 3*mat
mat2 == mat1 + mat1 + mat1
transpose <- t(mat2)
trace <- tr(mat2)
?tr
?trace
?inv
inverse <- inv(mat2)
?inverse
??"matrix inverse"
??" inverse"
transpose <- t(mat2)
determinant <- det(mat2)
inverse <- inv(mat2)
transpose <- t(mat2)
determinant <- det(mat2)
inverse <- solve(mat2)
eigenvals <- eigen(mat2)$val
eigenvecs <- eigen(mat2)$vec
svd_D <- svd(mat2)$d
group <- factor(rep(c("Control","Treatment"),c(3,4)))
summary(group)
group <- factor(rep(c("Control","Treatment"),c(3,4)))
ages <- c(20, 30, 40, 35, 35, 35, 35)
sex <- c("M", "M", "F", "M", "F", "F", "F")
split(ages, list(group, sex))
table(sex, group)
table(sex, group, age)
table(sex, group, ages)
table(sex, group)
smtg <- c(1,2,3)
for (i in smtg) {
print(i)
}
tapply(ages, group, mean)
m
m <- 0
vec <- baseball$Salary
setwd("~/Desktop/Data")
setwd("/Users/salimmjahad/Desktop/STAT_COMP/midterm1")
baseball <- read.csv("Baseball.csv",as.is=TRUE)
dim(baseball)
names(baseball)
m <- 0
vec <- baseball$Salary
for (i in 1:length(vec)){
m <- m + vec[i]/length(vec)
}
m
vec
dim(vec)
dim(vec)
mode(vec)
typeof(vec)
m
mean(vec)
mean(vec)
m
mean(vec)
# Code goes here
mean(vec)
# Code goes here
baseball["Name"]
# Code goes here
strsplit(baseball["Name"], " ")
# Code goes here
strsplit(baseball["Name"], split=" ")
# Code goes here
mode(baseball["Name"])
# Code goes here
as.char(baseball["Name"])
# Code goes here
as.character(baseball["Name"])
# Code goes here
as.character(baseball["Name"])[1]
# Code goes here
strsplit(baseball["Name"][1], split=" ")
# Code goes here
baseball["Name"][1]
# Code goes here
baseball["Name"]
# Code goes here
baseball["Name"][[1]]
# Code goes here
baseball["Name"]
# Code goes here
dim(baseball["Name"])
# Code goes here
baseball["Name"][1,]
# Code goes here
dim(baseball["Name"])[1]
# Code goes here
dim(baseball["Name"])[1,]
# Code goes here
mode(baseball["Name"][1,])
setwd("/Users/salimmjahad/Desktop/STAT_COMP/midterm1")
baseball <- read.csv("Baseball.csv",as.is=TRUE)
dim(baseball)
names(baseball)
m <- 0
vec <- baseball$Salary
for (i in 1:length(vec)){
m <- m + vec[i]/length(vec)
}
m
# Code goes here
mean(vec)
mode(baseball["Name"][1,])
for (i in 1:dim(baseball["Name"])[1]) {
tmp <- baseball["Name"][i,]
baseball["FirstName"][i,] <- strsplit(tmp, split=" ")[1]
}
tmpv <- c()
for (i in 1:dim(baseball["Name"])[1]) {
tmp <- baseball["Name"][i,]
tmpv[i] <- strsplit(tmp, split=" ")[1]
}
head(baseball["Name"][1,])
head(baseball["Name"])
tmpv
dim(tmpv)
tmpv
tmpv[1]
tmpv[1][1]
tmpv[1][,1]
tmpv[1][1,]
tmpv[1][1]
tmpv[1][[1]]
tmpv[[1]]
mode(tmpv[[1]])
typeof(tmpv[[1]])
# Code goes here
strsplit(baseball["Name"][1,], split=" ")[1]
# Code goes here
strsplit(baseball["Name"][1,], split=" ")[[1]]
# Code goes here
strsplit(baseball["Name"][1,], split=" ")[[1]][1]
tmpv <- c()
for (i in 1:dim(baseball["Name"])[1]) {
tmp <- baseball["Name"][i,]
tmpv[i] <- strsplit(tmp, split=" ")[[1]][1]
}
tmpv
baseball["FirstName"] <- tmpv
baseball["FirstName"]
baseball["Name"]
baseball["FirstName"]
head(baseball)
tmpv <- c()
for (i in 1:dim(baseball["Name"])[1]) {
tmp <- baseball["Name"][i,]
tmpv[i] <- strsplit(tmp, split=" ")[[1]][1]
}
tmpv
baseball["FirstName"] <- tmpv
head(baseball)
tmpv <- c()
for (i in 1:dim(baseball["Name"])[1]) {
tmp <- baseball["Name"][i,]
tmpv[i] <- strsplit(tmp, split=" ")[[1]][1]
}
baseball["FirstName"] <- tmpv
head(baseball)
# Code goes here
summary(baseball["FirstName"])
# Code goes here
summary(as.factor(baseball["FirstName"]))
# Code goes here
summary(as.factor(c(baseball["FirstName"])))
# Code goes here
baseball["FirstName"]
# Code goes here
levels(baseball["FirstName"])
# Code goes here
factor(baseball["FirstName"])
# Code goes here
as.data.frame(table(unlist(baseball["FirstName"])))
# Code goes here
as.data.frame(unlist(baseball["FirstName"]))
# Code goes here
unlist(baseball["FirstName"])
names(smtg) <- NULL
smtg <- unlist(baseball["FirstName"])
names(smtg) <- NULL
smtg
as.factor(smtg)
summary(as.factor(smtg))
# Code goes here
smtg <- unlist(baseball["FirstName"])
names(smtg) <- NULL
head(summary(as.factor(smtg)), 10)
# Code goes here
grep("Clark", smtg)
# Code goes here
grep(baseball["FirstName"], smtg)
# Code goes here
grep(baseball["Name"], smtg)
# Code goes here
grep(unlist(baseball["Name"]), smtg)
# Code goes here
unlist(baseball["Name"])
# Code goes here
smtg1 <- unlist(baseball["Name"])
names(smtg1) <- NULL
smtg1
grep("Clark", smtg1)
baseball["Name"][[133]]
baseball[[133]]
baseball[,133]
baseball[133]
baseball$Name
subset(baseball, any(grepl("Clark", Name)))
subset(baseball, any(grepl("Clark", baseball$Name)))
grep("Clark", smtg1)
baseball[grep("Clark", smtg1),]
baseball[grep("Clark", baseball$Name),]
# Code goes here
baseball[grep("Clark", baseball$Name),]
dim(head(summary(as.factor(smtg)), 10))
names(head(summary(as.factor(smtg)), 10))
common <- names(head(summary(as.factor(smtg)), 10))
common
# Code goes here
subset(baseball, Name %in% common)
# Code goes here
subset(baseball, Name==common)
# Code goes here
subset(baseball, Name=="Mike"")
# Code goes here
subset(baseball, Name=="Mike")
# Code goes here
subset(baseball$Name, baseball$Name=="Mike")
# Code goes here
subset(baseball$Name, baseball$FirstName=="Mike")
# Code goes here
subset(baseball, baseball$FirstName=="Mike")
# Code goes here
subset(baseball, baseball$FirstName %in% common)
sum(head(summary(as.factor(smtg)), 10))
common
# Code goes here
mean(subset(baseball, baseball$FirstName %in% common)$Salary)
subset(baseball, baseball$FirstName %in% common)$Salary
# Code goes here
mean(subset(baseball, baseball$FirstName %in% common)$Salary)
length(subset(baseball, baseball$FirstName %in% common)$Salary)
commonSal <- subset(baseball, baseball$FirstName %in% common)$Salary
avgSalary = 0
commonSal <- subset(baseball, baseball$FirstName %in% common)$Salary
for (i in commonSal) {
avgSalary <- avgSalary + i/length(commonSal)
}
avgSalary
mean(subset(baseball, baseball$FirstName %in% common)$Salary)
avgSalary = 0
commonSal <- subset(baseball, baseball$FirstName %in% common)$Salary
for (i in commonSal) {
avgSalary <- avgSalary + i/length(commonSal)
}
avgSalary
cancer <- read.table("BYSITE.TXT",sep = "|",header=T,
na.strings=c("~","."))
dim(cancer)
levels(cancer$RACE)
levels(cancer$RACE)
cancer <- read.table("BYSITE.TXT",sep = "|",header=T,
na.strings=c("~","."))
dim(cancer)
levels(cancer$RACE)
names(cancer)
dim(cancer)
names(cancer)
levels(cancer$RACE)
#levels(cancer$SITE)
# Code goes here
cancer$EVENT_TYPE
#levels(cancer$SITE)
# Code goes here
cancer$SITE
#levels(cancer$SITE)
# Code goes here
cancer$CRUDE_RATE
#levels(cancer$SITE)
# Code goes here
cancer
#levels(cancer$SITE)
# Code goes here
grep("prostate",cancer$SITE)
#levels(cancer$SITE)
# Code goes here
grep("Prostate",cancer$SITE)
Prostate <- cancer[grep("Prostate",cancer$SITE),]
Prostate
dim(Prostate)
Prostate <- cancer[grep("Prostate",cancer$SITE),]
dim(Prostate)
#levels(cancer$EVENT_TYPE)
# Code goes here
subset(canser, EVENT_TYPE =="Incidence")
#levels(cancer$EVENT_TYPE)
# Code goes here
subset(cancer, EVENT_TYPE =="Incidence")
#levels(cancer$EVENT_TYPE)
# Code goes here
incidents <- subset(cancer, EVENT_TYPE =="Incidence")
tapply(incidents$CRUDE_RATE, incidents$RACE , mean)
#levels(cancer$EVENT_TYPE)
# Code goes here
incidents <- subset(Prostate, EVENT_TYPE =="Incidence")
tapply(incidents$CRUDE_RATE, incidents$RACE , mean)
subset(incidents, RACE == "Black")
subset(incidents, RACE == "Black")$CRUDE_RATE
tapply(incidents$CRUDE_RATE, incidents$RACE , mean)
mean(subset(incidents, RACE == "Black")$CRUDE_RATE)
incidents <- subset(Prostate, EVENT_TYPE =="Incidence")
tapply(incidents$CRUDE_RATE, incidents$RACE , mean)
#levels(cancer$YEAR)
# Code goes here
levels(cancer$YEAR)
#levels(cancer$YEAR)
# Code goes here
subset(Prostate, YEAR!="2010-2014" & RACE !="All Races")
#levels(cancer$YEAR)
# Code goes here
dim(subset(Prostate, YEAR!="2010-2014" & RACE !="All Races"))
#levels(cancer$YEAR)
# Code goes here
Prostate <- subset(Prostate, YEAR!="2010-2014" & RACE !="All Races")
sapply(Prostate$YEAR, as.numeric)
Prostate$YEAR
as.numerica(Prostate$YEAR)
as.numeric(Prostate$YEAR)
int(Prostate$YEAR)
strtoi(Prostate$YEAR)
Prostate$YEAR <- strtoi(Prostate$YEAR)
mode(Prostate$YEAR)
dim(Prostate$YEAR)
dim(Prostate)
tapply(incidents$CRUDE_RATE, incidents$RACE , mean)
Prostate <- cancer[grep("Prostate",cancer$SITE),]
dim(Prostate)
New_Prostate <- subset(Prostate, YEAR!="2010-2014" & RACE !="All Races")
New_Prostate$YEAR <- strtoi(New_Prostate$YEAR)
mode(New_Prostate$YEAR)
dim(New_Prostate)
# Code goes here
New_incidents <- subset(New_Prostate, EVENT_TYPE =="Incidence")
New_incidents <- subset(New_Prostate, EVENT_TYPE =="Incidence")
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, col=(New_incidents$RACE == "White"), xlab = "Sepal Length",ylab = "Petal Length" )
plot(New_incidents$CRUDE_RATE, New_incidents$YEAR, col=(New_incidents$RACE == "White"), xlab = "Sepal Length",ylab = "Petal Length" )
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, col=(New_incidents$RACE), xlab = "Sepal Length",ylab = "Petal Length" )
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, xlab = "Sepal Length",ylab = "Petal Length" )
New_incidents
coloring = New_incidents$RACE == "White"
coloring
New_incidents$RACE
coloring = New_incidents$RACE == "White"
dim(coloring)
length(coloring)
dim(New_incidents)
#length(coloring)
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, col = coloring, xlab = "Sepal Length",ylab = "Petal Length" )
#length(coloring)
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, col = coloring, xlab = "Incidence Rate",ylab = "Year
" )
#length(coloring)
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, col = coloring, xlab = "Incidence Rate",ylab = "Year" )
subset(New_incidents, RACE=="White")
subset(New_incidents, RACE=="White" % YEAR == 2010)
subset(New_incidents, RACE=="White" % YEAR == 2011)
New_incidents <- subset(New_Prostate, EVENT_TYPE =="Incidence")
#dim(New_incidents)
coloring = New_incidents$RACE == "White"
#length(coloring)
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, col = coloring, xlab = "Incidence Rate",ylab = "Year" )
#length(coloring)
lol <- tapply(New_incidents$CRUDE_RATE, incidents$RACE , mean)
#length(coloring)
lol <- tapply(New_incidents$CRUDE_RATE, New_incidents$RACE , mean)
lol
#length(coloring)
lol <- tapply(New_incidents$CRUDE_RATE, New_incidents$RACE, New_incidents$YEAR, mean)
#length(coloring)
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, col = coloring, xlab = "Incidence Rate",ylab = "Year" )
New_incidents <- subset(New_Prostate, EVENT_TYPE =="Incidence")
#dim(New_incidents)
coloring = New_incidents$RACE == "White"
#length(coloring)
plot(New_incidents$YEAR, New_incidents$CRUDE_RATE, col = coloring, xlab = "Incidence Rate",ylab = "Year" )
